services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - my_network

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-acme
    restart: always
    environment:
      - DEFAULT_EMAIL=ilyakondryukov8765@gmail.com
      - NGINX_PROXY_CONTAINER=nginx-proxy  # ✅ ВАЖНО!
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme:/etc/acme.sh
    networks:
      - my_network

  web:
    image: nginx:stable
    container_name: laravel-web
    volumes:
      - .:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - VIRTUAL_HOST=itulip.ru
      - LETSENCRYPT_HOST=itulip.ru
      - LETSENCRYPT_EMAIL=ilyakondryukov8765@gmail.com
      - VIRTUAL_PORT=80
    depends_on:
      - app
    networks:
      - my_network
    expose:
      - "80"


  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - XDEBUG_MODE=${XDEBUG_ENABLED}
      - XDEBUG_CLIENT_HOST=host.docker.internal
      - XDEBUG_START_WITH_REQUEST=yes
      - VIRTUAL_HOST=itulip.ru
      - LETSENCRYPT_HOST=itulip.ru
      - LETSENCRYPT_EMAIL=ilyakondryukov8765@gmail.com
      - VIRTUAL_PORT=9000
    expose:
      - "9000"
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
    networks:
      - my_network

  mysql:
    image: mysql/mysql-server:8.0
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - 'mysql_data:/var/lib/mysql'
    networks:
      - my_network
    ports:
      - '3306:3306'

  netdata:
    image: netdata/netdata
    container_name: netdata
    ports:
      - "19999:19999"
    networks:
      - my_network
    volumes:
      - /var/lib/netdata
      - /etc/netdata
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - "9001:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - my_network
    restart: always

networks:
  my_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  portainer_data:
    driver: local
